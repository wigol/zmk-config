/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

// Hyper key shortcut
#define LHYP LS(LC(LA(LGUI)))

    // Tune trigger for encoders
    &sensors {
        triggers-per-rotation = <40>;
    };

/* Key positions, from https://github.com/sondrew/clean-zmk-config

  ╭────────────────────────────┬────────────────────────────╮
  │  0   1   2   3   4   5     │      6   7   8   9  10  11 │
  │ 12  13  14  15  16  17     │     18  19  20  21  22  23 │
  │ 24  25  26  27  28  29     │     30  31  32  33  34  35 │
  │ 36  37  38  39  40  41  42 │ 43  44  45  46  47  48  49 │
  ╰───────╮ 50  51  52  53  54 │ 55  56  57  58  59 ╭───────╯
          ╰────────────────────┴────────────────────╯        
*/

/ {

    behaviors {
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "left-homerow-mods";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59 50 51 52 53 54>;
        };
        lhms: left_homerow_mods_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "left-homerow-mods-shift";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            // hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59 50 51 52 53 54>;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "right-homerow-mods";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39 50 51 52 53 54 55 56 57 58 59 17 29 41 42>;
        };
        rhms: right_homerow_mods_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "right-homerow-mods-shift";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            // disabling for shift after https://github.com/infused-kim/zmk-config/blob/8c2cad1185afb594a502872441f11319433dc5e4/config/includes/behaviours_homerow_mods.dtsi#L65
            // hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39 50 51 52 53 54 55 56 57 58 59 17 29 41 42>;
        };
    };

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";
// ------------------------------------------------------------------------------------------------------------
// |    `  |   1   |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   \   |
// |  TAB  |   Q   |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// | C/ESC |  G/A  | A/S | S/D  | C/F  |  G   |                   |  H   | C/J   | S/K   | A/L  |  G/;  |  C/'  |
// | SHIFT |   Z   |  X  |  C   |  V   |  B   |  MUTE  |  | PLAYP |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               |CTRL | ALT/[  |GUI/- | LOWER|  ENTER |  | SPACE | RAISE|GUI/=  | ALT/] |CTRL  |
            bindings = <
&kp GRAVE      &kp N1      &kp N2      &kp N3        &kp N4       &kp N5                           &kp N6       &kp N7      &kp N8     &kp N9     &kp N0         &kp BSLH
&kp TAB        &kp Q       &kp W       &kp E         &kp R        &kp T                            &kp Y        &kp U       &kp I      &kp O      &kp P          &kp BSPC
&mt LCTRL ESC  &lhm LGUI A &lhm LALT S &lhms LSHFT D &lhm LCTRL F &lhm LHYP G                  &rhm LHYP H  &rhm RCTRL J &rhms RSHFT K &rhm LALT L &rhm RGUI SEMI &mt RCTRL SQT
&kp LSHFT      &kp Z       &kp X       &kp C         &kp V        &kp B      &kp C_MUTE &kp C_PP   &kp N        &kp M          &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
               &mt LCTRL LA(Z) &mt LALT LBKT &mt LGUI MINUS  &mo LOWER  &kp RET    &kp SPACE  &mo RAISE  &mt RGUI EQUAL &mt RALT RBKT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        lower_layer {
            label = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC   &trans &trans  &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans     &trans &trans  &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";
// -------------------------------------------------------------------------------------------------------------
// |       | BT1  | BT2  |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   | OTOG  | BTCLR |                | PGUP | HOME |   ^   |  END |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS  |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |       |      |  |      |      |      |       |      |       |       |
//                |      |       |       |       |      |  |      |      |      |       |      |
            bindings = <
&trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &out OUT_TOG &bt BT_CLR                    &kp PG_UP &kp HOME  &kp UP   &kp END   &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                      &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans  &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// -----------------------------------------------------------------------------------------------------------------------------
// |        |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |        |       |
// |        |E_PWR OFF|         |         |  BTCLR  |         |                  |      |O_USB |       |      |E_PWR ON|       |
// | RESET  |         |         |         |         |         |                  |      |      |       |      |        | RESET |
// | BTLDR  |         |         |         |         | O_BLE   |         | |      |      |      |       |      |        | BTLDR |
//                    |         |         |         |         |         | |      |      |      |       |      |
            label = "adjust";
            bindings = <
&trans            &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4     &none &none        &none &none &none &none
&none             &ext_power EP_OFF &none           &none           &bt BT_CLR      &none            &none &out OUT_USB &none &none &ext_power EP_ON &none
&sys_reset        &none             &none           &none           &none           &none            &none &none        &none &none &none &sys_reset
&bootloader       &none             &none           &none           &none           &out OUT_BLE     &none &none        &none &none &none &none &none &bootloader
                                    &none           &none           &none           &none            &none &none        &none &none &none &none
            >;
        };

    };
};
