/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LBAS 0
#define LSYM 1
#define LNAV 2
#define LCFG 3

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33

// Hyper key shortcut
#define LHYP LS(LC(LA(LGUI)))

// For layer-tap, to handle repeated taps (e.g. hold BSPC):
&lt {
    quick-tap-ms = <200>;
};
&mt {
    quick-tap-ms = <200>;
};

/ {
    behaviors {
        //mod kp when u hold, and to layer when you tap
        mtt:mod_tap_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_TO";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&to>;
        };
        //momentary layer on hold, and to layer on tap
        mlt:momentary_layer_tap_to {
            compatible = "zmk,behavior-hold-tap";
            label="MOMENTARY_LAYER_TAP_TO";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&to>;
        };
        hml:home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <120>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr:home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <120>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LSYM LNAV>;
            then-layer = <LCFG>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
       	layer_default {
            bindings = <
            &kp Q       &kp W       &kp E        &kp R        &kp T            &kp Y       &kp U        &kp I        &kp O       &kp P
            &hml LHYP A &hml LALT S &hml LSHFT D &hml LCTRL F &hml LGUI G      &hmr RGUI H &hmr RCTRL J &hmr RSHFT K &hmr LALT L &hmr LHYP SEMI
            &kp Z       &kp X       &kp C        &kp V        &kp B            &kp N       &kp M        &kp COMMA    &kp DOT     &mt RALT FSLH
                                         &lt LSYM TAB &kp ENTER  	                   &mt LSHFT SPC &lt LNAV BSPC
            >;
		};
       	layer_symbols {
            bindings = <
            &kp N1    &kp N2   &kp N3    &kp N4    &kp N5             &kp N6    &kp N7   &kp N8          &kp N9    &kp N0
            &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR
            &kp GRAVE &kp LBKT &kp RBKT  &kp EQUAL &kp MINUS          &kp LBRC  &kp RBRC &kp SQT         &kp PIPE  &kp BSLH
                                    &trans &kp LCTRL                  &kp LSHFT &trans
            >;
		};
		layer_navigation {
            bindings = <
            &kp ESC &kp F1 &kp F2  &kp F3  &kp F4             &kp PG_UP &kp HOME       &kp UP    &kp END    &kp C_VOL_UP
            &kp TAB &kp F5 &kp F6  &kp F7  &kp F8             &kp PG_DN &kp LEFT       &kp DOWN  &kp RIGHT  &kp C_VOL_DN
            &kp DEL &kp F9 &kp F10 &kp F11 &kp F12            &kp CAPS  &kp C_PREVIOUS &kp C_PP  &kp C_NEXT &kp C_MUTE
                                  &trans &kp LSHFT  		           &kp LCTRL &trans
            >;
		};

        layer_config {
            bindings = <
            &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &none &none &none &none &none
            &sys_reset  &ext_power &none &none &bt BT_CLR                            &none &none &none &none &sys_reset
            &bootloader &none &none &none &none                                      &none &none &none &none &bootloader
            >;
        };
	};
};
